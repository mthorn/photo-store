.text-right.text-warning{ 'ng-show' => 'ctrl.errors.length' }
  %a{ href: '#', 'ng-click' => 'ctrl.viewErrors()' }
    {{ctrl.errors.length}} files failed to upload.
  %button.btn.btn-default{ 'ng-click' => 'ctrl.retryAll()' } Retry
  %button.btn.btn-default{ 'ng-click' => 'ctrl.errors = []' } Clear

%h1.file-drop-target.bg-primary{ 'file-drop' => 'ctrl.import(files)', 'ng-class' => '{ checking: ctrl.checking > 0 }' }
  %span.reading
    %i.fa.fa-spin.fa-spinner
    Preparing files...
  %span.hover{ 'ng-hide' => 'ctrl.progress.count' }
    Drop files to start import!
  %span.hover{ 'ng-show' => 'ctrl.progress.count' }
    Drop files to add to import!

.bg-info.text-center{ 'ng-show' => 'ctrl.progress' }
  %button.btn.btn-default{ 'ng-hide' => 'ctrl.queue.isPaused', 'ng-click' => 'ctrl.pause()' } Pause
  %button.btn.btn-default{ 'ng-show' => 'ctrl.queue.isPaused', 'ng-click' => 'ctrl.unpause()' } Continue
  %button.btn.btn-default{ 'ng-click' => 'ctrl.cancel()' } Cancel
  Uploading:
  %span {{ctrl.progress.done + 1}} / {{ctrl.progress.count}} files,
  %span {{ctrl.progress.loaded + (ctrl.current.progress.loaded || 0) | bytes}} / {{ctrl.progress.total | bytes}},
  %span{ 'ng-show' => 'ctrl.skipped' }
    {{ctrl.skipped}} files skipped,
  %span{ 'ng-show' => 'ctrl.timeRemaining()' }
    {{ctrl.timeRemaining() | duration}} remaining,
    {{ctrl.uploadRate() | bytes}}/s
  %span{ 'ng-hide' => 'ctrl.timeRemaining()' }
    calculating time remaining...

%progressbar{ 'ng-if' => 'ctrl.progress', max: 'ctrl.progress.total', value: 'ctrl.progress.loaded + (ctrl.current.progress.loaded || 0)' }
